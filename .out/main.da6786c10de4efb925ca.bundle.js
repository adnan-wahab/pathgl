(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{358:function(module,exports,__webpack_require__){"use strict";__webpack_require__(22),__webpack_require__(198),__webpack_require__(21),__webpack_require__(199),__webpack_require__(200),__webpack_require__(201),__webpack_require__(202),__webpack_require__(203),__webpack_require__(204),__webpack_require__(205),__webpack_require__(206),__webpack_require__(207),__webpack_require__(208),__webpack_require__(209),__webpack_require__(210),__webpack_require__(211),__webpack_require__(212),__webpack_require__(213),__webpack_require__(214),__webpack_require__(215),__webpack_require__(216),__webpack_require__(217),__webpack_require__(218),__webpack_require__(219),__webpack_require__(220),__webpack_require__(221),__webpack_require__(222),Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEFAULT_RECTICLE_COLOR=exports.DEFAULT_SHOW_RECTICLE=exports.DEFAULT_BACKGROUND_IMAGE=exports.DEFAULT_VIEW=exports.DEFAULT_ROTATION=exports.DEFAULT_DISTANCE=exports.DEFAULT_TARGET=exports.DEFAULT_COLORS=exports.DEFAULT_COLOR_BG=exports.DEFAULT_COLOR_HOVER=exports.DEFAULT_COLOR_ACTIVE=exports.DEFAULT_COLOR_NORMAL=exports.DEFAULT_COLOR_BY=exports.DEFAULT_COLORMAP=exports.DEFAULT_POINT_OUTLINE_WIDTH=exports.DEFAULT_POINT_SIZE_SELECTED=exports.DEFAULT_POINT_SIZE=exports.DEFAULT_HEIGHT=exports.DEFAULT_WIDTH=exports.DEFAULT_DATA_ASPECT_RATIO=exports.GL_EXTENSIONS=exports.FLOAT_BYTES=exports.COLOR_NUM_STATES=exports.COLOR_NORMAL_IDX=exports.COLOR_HOVER_IDX=exports.COLOR_BG_IDX=exports.COLOR_ACTIVE_IDX=void 0;exports.COLOR_ACTIVE_IDX=1;exports.COLOR_BG_IDX=3;exports.COLOR_HOVER_IDX=2;exports.COLOR_NORMAL_IDX=0;exports.COLOR_NUM_STATES=4;var FLOAT_BYTES=Float32Array.BYTES_PER_ELEMENT;exports.FLOAT_BYTES=FLOAT_BYTES;exports.GL_EXTENSIONS=["OES_standard_derivatives","OES_texture_float","ANGLE_instanced_arrays"];exports.DEFAULT_DATA_ASPECT_RATIO=1;var DEFAULT_WIDTH=window.innerWidth;exports.DEFAULT_WIDTH=DEFAULT_WIDTH;var DEFAULT_HEIGHT=window.innerHeight;exports.DEFAULT_HEIGHT=DEFAULT_HEIGHT;exports.DEFAULT_POINT_SIZE=30;exports.DEFAULT_POINT_SIZE_SELECTED=2;exports.DEFAULT_POINT_OUTLINE_WIDTH=2;exports.DEFAULT_COLORMAP=[];exports.DEFAULT_COLOR_BY=null;var DEFAULT_COLOR_NORMAL=[1,.66,.66,1];exports.DEFAULT_COLOR_NORMAL=DEFAULT_COLOR_NORMAL;var DEFAULT_COLOR_ACTIVE=[0,.55,1,1];exports.DEFAULT_COLOR_ACTIVE=DEFAULT_COLOR_ACTIVE;var DEFAULT_COLOR_HOVER=[0,1,1,1];exports.DEFAULT_COLOR_HOVER=DEFAULT_COLOR_HOVER;var DEFAULT_COLOR_BG=[0,0,0,1];exports.DEFAULT_COLOR_BG=DEFAULT_COLOR_BG;var DEFAULT_COLORS=[DEFAULT_COLOR_NORMAL,DEFAULT_COLOR_ACTIVE,DEFAULT_COLOR_HOVER,DEFAULT_COLOR_BG];exports.DEFAULT_COLORS=DEFAULT_COLORS;exports.DEFAULT_TARGET=[0,0];exports.DEFAULT_DISTANCE=100000.5;exports.DEFAULT_ROTATION=0;var DEFAULT_VIEW=new Float32Array([5.554607391357422,0,0,0,0,5.554607391357422,0,0,0,0,1,0,-.527761697769165,.8586031794548035,0,1]);exports.DEFAULT_VIEW=DEFAULT_VIEW;exports.DEFAULT_BACKGROUND_IMAGE=null;exports.DEFAULT_SHOW_RECTICLE=!0;exports.DEFAULT_RECTICLE_COLOR=[1,1,1,.5]},376:function(module,exports,__webpack_require__){__webpack_require__(377),__webpack_require__(553),module.exports=__webpack_require__(554)},448:function(module,exports){},554:function(module,exports,__webpack_require__){"use strict";(function(module){var _html=__webpack_require__(555);module._StorybookPreserveDecorators=!0,(0,_html.configure)([__webpack_require__(792)],module)}).call(this,__webpack_require__(77)(module))},792:function(module,exports,__webpack_require__){var map={"./index.stories.js":793};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=792},793:function(module,exports,__webpack_require__){"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}__webpack_require__(26),__webpack_require__(35),__webpack_require__(36),__webpack_require__(20),__webpack_require__(353),__webpack_require__(28),__webpack_require__(55),__webpack_require__(302),__webpack_require__(195),__webpack_require__(46),__webpack_require__(22),__webpack_require__(56),__webpack_require__(64),__webpack_require__(37),__webpack_require__(63),__webpack_require__(118),__webpack_require__(21),__webpack_require__(97),__webpack_require__(47),__webpack_require__(306),__webpack_require__(38),__webpack_require__(29),__webpack_require__(39),Object.defineProperty(exports,"__esModule",{value:!0}),exports.withEmoji=exports.withText=exports.default=void 0,__webpack_require__(139);_interopRequireDefault(__webpack_require__(138));var _src=_interopRequireDefault(__webpack_require__(794)),d3=function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(__webpack_require__(359));function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}exports.default={title:"Initial Test"};exports.withText=function(){var button=document.createElement("button");return button.innerText="üòÄ üòé üëç üíØ",button};exports.withEmoji=function(){console.log("hii");var url=["http://tightfisted-whistle.surge.sh/data/thecut.json","mobile-banking.json","d.tsv","10samps.json"],clip=function(d){return d/3e3},canvas=document.createElement("canvas"),colorscale=d3.scaleLinear().domain([-.15,0,.15]).range([d3.interpolatePuOr(0),d3.interpolatePuOr(.5),d3.interpolatePuOr(1)]).clamp(!0),toColor=function(color){var c=d3.rgb(colorscale(color));return[c.r/255,c.g/255,c.b/255]},loadTSV=function(){var _ref=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(){var position,color,pointList;return regeneratorRuntime.wrap((function(_context){for(;;)switch(_context.prev=_context.next){case 0:return position=[],color=[],window.color=color,_context.next=5,d3.tsv("./data/d.tsv",d3.autoType);case 5:_context.sent.forEach((function(d){position.push(d.x,d.y),color.push.apply(color,toColor(d.sentiment))})),pointList=position.map((function(d){return[clip(d.x),clip(d.y),d.uuid||d.id]})),graph?graph.setProps({attributes:{position:position,color:color}}):graph=_src.default.init({attributes:{position:position,color:color,pointList:pointList},canvas:canvas});case 9:case"end":return _context.stop()}}),_callee)})));return function(){return _ref.apply(this,arguments)}}();d3.select("#size").on("change",(function(){console.log(d3.event.target.value/100),graph.setState({sizeAttenuation:d3.event.target.value/100})})),d3.select("#nodes").on("change",(function(){graph.setState({showNodes:d3.event.target.checked})})),d3.select("#line-colors").on("change",(function(){graph.setState({edgeColors:d3.event.target.checked})})),d3.select("#lines").on("change",(function(){graph.setState({showLines:d3.event.target.checked})}));var graph,favorites=[],load=function(url){if(url.includes(".tsv"))return loadTSV(window.location.tsv);fetch(url).then((function(body){return body.json()})).then((function(json){var attributes=function(data){var pointList=data.nodes.map((function(d){return[clip(d.x),clip(d.y),d.uuid||d.id]}));data.pointList=pointList;var points={};data.nodes.forEach((function(d){return points[d.uuid||d.id]=d}));var getNode=function(id){return points[id]},position=(data.nodes.map((function(){return[Math.random()]})),_.flatten(data.nodes.map((function(d){return[clip(d.x),clip(d.y)]})))),sentimentValue=(d3.scaleOrdinal(d3.schemeAccent),_.flatten(data.nodes.map((function(d){var c=d3.rgb(d3.interpolateSpectral(+d.attributes?d.attributes.SentimentVal:Math.random()));return[c.r/255,c.g/255,c.b/255]})))),counts={};data.edges.forEach((function(d){counts[d.target]=counts[d.target]}));var edges={sourcePositions:Array(2*data.edges.length).fill(0),targetPositions:Array(2*data.edges.length).fill(0)};data.edges.forEach((function(edge,idx){var source=getNode(edge.source),target=getNode(edge.target);edges.sourcePositions[2*idx]=clip(source.x),edges.sourcePositions[2*idx+1]=clip(source.y),edges.targetPositions[2*idx]=clip(target.x),edges.targetPositions[2*idx+1]=clip(target.y)}));var edgeColors=Array(3*data.edges.length).fill(0);data.kmeans&&Object.entries(data.kmeans).map((function(tup){var _tup$=tup[1],color=_tup$.color;_tup$.nodes.forEach((function(id){return getNode(id).color=color}))}));data.edges.forEach((function(edge,idx){var color=(data.nodes[edge.source]?data.nodes[edge.source]:getNode(edge.target)).color,c=d3.rgb(color);edgeColors[3*idx]=c.r/255,edgeColors[3*idx+1]=c.g/255,edgeColors[3*idx+2]=c.b/255}));var dates=data.nodes.map((function(d){return d.create_time||Math.random()*new Date})),color=_.flatten(data.nodes.map((function(d){var c=d3.color(d.color||"pink");return[c.r/255,c.g/255,c.b/255]}))),legend=Object.entries(data.kmeans||{}).map((function(d){return d[1].color})),stateIndex=_.flatten(data.nodes.map((function(d){var c=d.color;return legend.indexOf(c)})));return{position:position,counts:counts,edges:edges,edgeColors:edgeColors,color:color,dates:dates,sentimentValue:sentimentValue,stateIndex:stateIndex,pointList:pointList}}(json);graph?(graph.setState({favorites:favorites=[]}),graph.setProps({attributes:attributes})):graph=_src.default.init({attributes:attributes,canvas:canvas,onClick:function onClick(point,idx,events){events.shiftKey&&(favorites=favorites.concat(idx)),graph.setState({favorites:favorites})}})}))};return d3.select(window).on("load",(function main(){document.body.appendChild(canvas);var container=d3.select("body").style("overflow","hidden").append("div").attr("class","sidebar");canvas.height=innerHeight,canvas.width=innerWidth,console.log("hi",container.node()),container.selectAll("a").data(url).enter().append("div").append("a").text((function(d){return d})).attr("href",(function(d){return"./data/".concat(d)})).on("click",(function(d){d3.event.target.href.includes("tsv")?loadTSV():load(d3.event.target.href),window.location.hash=d,d3.event.preventDefault()})),load("thecut.json"),document.title="REGL NETWORK VIS"})),canvas}},794:function(module,exports,__webpack_require__){"use strict";__webpack_require__(26),__webpack_require__(35),__webpack_require__(36),__webpack_require__(20),__webpack_require__(116),__webpack_require__(795),__webpack_require__(28),__webpack_require__(55),__webpack_require__(46),__webpack_require__(22),__webpack_require__(56),__webpack_require__(64),__webpack_require__(198),__webpack_require__(37),__webpack_require__(63),__webpack_require__(797),__webpack_require__(21),__webpack_require__(47),__webpack_require__(38),__webpack_require__(199),__webpack_require__(200),__webpack_require__(201),__webpack_require__(202),__webpack_require__(203),__webpack_require__(204),__webpack_require__(205),__webpack_require__(206),__webpack_require__(207),__webpack_require__(208),__webpack_require__(209),__webpack_require__(210),__webpack_require__(211),__webpack_require__(212),__webpack_require__(213),__webpack_require__(214),__webpack_require__(215),__webpack_require__(216),__webpack_require__(217),__webpack_require__(218),__webpack_require__(219),__webpack_require__(220),__webpack_require__(221),__webpack_require__(222),__webpack_require__(29),__webpack_require__(39),Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"createRegl",{enumerable:!0,get:function get(){return _utils.createRegl}}),Object.defineProperty(exports,"createTextureFromUrl",{enumerable:!0,get:function get(){return _utils.createTextureFromUrl}}),exports.default=void 0;var _dom2dCamera=_interopRequireDefault(__webpack_require__(819)),_kdbush=_interopRequireDefault(__webpack_require__(820)),_withRaf=(_interopRequireDefault(__webpack_require__(817)),_interopRequireDefault(__webpack_require__(804))),_glMatrix=__webpack_require__(818),_lodash=_interopRequireDefault(__webpack_require__(805)),_lines=_interopRequireDefault(__webpack_require__(806)),_edges=_interopRequireDefault(__webpack_require__(807)),_arcLayer=_interopRequireDefault(__webpack_require__(808)),_constants=(_interopRequireDefault(__webpack_require__(810)),__webpack_require__(358)),_utils=__webpack_require__(813);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var BG_COLOR=[.1411764705882353,.15294117647058825,.18823529411764706,1],POINT_FS="\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nprecision mediump float;\nuniform vec2 selection;\n\nvarying vec4 vColor;\n\nvoid main() {\n  const vec3 bgColor= vec3(\n    0.1411764705882353,\n  0.15294117647058825,\n  0.18823529411764706\n  );\n  float r = 0.0, delta = 0.0, alpha = 1.0;\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n  r = dot(cxy, cxy);\n\n  #ifdef GL_OES_standard_derivatives\n    delta = fwidth(r);\n    alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n  #endif\n\n  vec3 color =   (r < 0.75) ? vColor.rgb : bgColor;\n  gl_FragColor = vec4(color, alpha * vColor.a);\n}\n",POINT_VS="\nprecision mediump float;\nuniform float pointSize;\nuniform float pointSizeExtra;\nuniform float numNodes;\nuniform float scaling;\nuniform float sizeAttenuation;\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\n\nuniform vec2 dateFilter;\n\nattribute vec2 pos;\nattribute vec3 color;\nattribute float stateIndex;\nattribute float dates;\n\n\nuniform float selectedCluster;\n\nuniform bool flatSize;\n\n// variables to send to the fragment shader\nvarying vec4 vColor;\n\nvoid main() {\n  if (! (dates > dateFilter.x && dates < dateFilter.y)) return;\n  gl_Position = projection * view * model * vec4(pos.xy, 0.0, 1.0);\n\n  vColor = vec4(color, 1.);\n\n  float finalScaling = pow(sizeAttenuation, scaling);\n  finalScaling = 4. + pow(pointSize, sizeAttenuation);\n\n  if (selectedCluster > -.1 && selectedCluster != stateIndex) finalScaling = 0.;\n\n  gl_PointSize = finalScaling + pointSizeExtra;\n\n}\n",NOOP=function(){},creategraph=function(options){var state={sizeAttenuation:.1,scaling:.4,numNodes:1,showLines:!0,showNodes:!0,flatSize:!0,edgeColors:!0,selectedCluster:-1,favorites:[],dateFilter:[0,1/0]},initialRegl=options.regl,initialBackground=_constants.DEFAULT_COLOR_BG,initialBackgroundImage=_constants.DEFAULT_BACKGROUND_IMAGE,initialCanvas=options.canvas,initialRecticleColor=(_constants.DEFAULT_SHOW_RECTICLE,_constants.DEFAULT_RECTICLE_COLOR),initialPointSize=_constants.DEFAULT_POINT_SIZE,initialPointSizeSelected=_constants.DEFAULT_POINT_SIZE_SELECTED,initialWidth=_constants.DEFAULT_WIDTH,initialHeight=_constants.DEFAULT_HEIGHT,initialTarget=_constants.DEFAULT_TARGET,initialDistance=_constants.DEFAULT_DISTANCE,initialRotation=_constants.DEFAULT_ROTATION,initialView=_constants.DEFAULT_VIEW,onHover=(options.createDrawNodes,options.onHover||NOOP),onClick=options.onClick||NOOP,attributes=options.attributes,scratch=new Float32Array(16),mousePosition=[0,0];window.getMousePosition=function(){return mousePosition};var pointList=[];(0,_utils.checkReglExtensions)(initialRegl);(0,_utils.toRgba)(initialBackground,!0);var camera,searchIndex,viewAspectRatio,projection,model,recticleHLine,recticleVLine,hoveredPoint,backgroundImage=initialBackgroundImage,canvas=initialCanvas,width=initialWidth,height=initialHeight,pointSizeSelected=initialPointSizeSelected,regl=initialRegl||(0,_utils.createRegl)(initialCanvas,{premultipliedAlpha:!1}),mouseDown=!1,mouseDownPosition=[0,0],numPoints=0,selection=[],dataAspectRatio=_constants.DEFAULT_DATA_ASPECT_RATIO,recticleColor=(0,_utils.toRgba)(initialRecticleColor,!0),isInit=!1,getScatterGlPos=function(){var y,x,_getMouseGlPos2=_slicedToArray([(x=mousePosition[0],x/width*2-1),(y=mousePosition[1],1+y/height*-2)],2),v=[_getMouseGlPos2[0],_getMouseGlPos2[1],1,1],mvp=_glMatrix.mat4.invert(scratch,_glMatrix.mat4.multiply(scratch,projection,_glMatrix.mat4.multiply(scratch,camera.view,model)));return _glMatrix.vec4.transformMat4(v,v,mvp),v.slice(0,2)},raycast=function(){var clostestPoint,_getScatterGlPos2=_slicedToArray(getScatterGlPos(),2),x=_getScatterGlPos2[0],y=_getScatterGlPos2[1],scaledPointSize=200*((0,_utils.min)(1,1)+Math.log2((0,_utils.max)(1,1)))*window.devicePixelRatio,xNormalizedScaledPointSize=scaledPointSize/width,yNormalizedScaledPointSize=scaledPointSize/height,pointsInBBox=searchIndex.range(x-xNormalizedScaledPointSize,y-yNormalizedScaledPointSize,x+xNormalizedScaledPointSize,y+yNormalizedScaledPointSize),minDist=scaledPointSize;return pointsInBBox.forEach((function(idx){var _searchIndex$points$i=_slicedToArray(searchIndex.points[idx],2),ptX=_searchIndex$points$i[0],ptY=_searchIndex$points$i[1],d=(0,_utils.dist)(ptX,ptY,x,y);d<minDist&&(minDist=d,clostestPoint=idx)})),clostestPoint},select=function(points){selection="string"==typeof points?[pointList.findIndex((function(d){return d[2]===points}))]:points,drawRaf()},getRelativeMousePosition=function(event){var rect=canvas.getBoundingClientRect();return mousePosition[0]=event.clientX-rect.left,mousePosition[1]=event.clientY-rect.top,[].concat(mousePosition)},mouseDownHandler=function(event){isInit&&(mouseDown=!0,mouseDownPosition=getRelativeMousePosition(event),event.shiftKey)},mouseUpHandler=function(){isInit&&(mouseDown=!1)},mouseClickHandler=function(event){if(isInit){var currentMousePosition=getRelativeMousePosition(event),clostestPoint=(_utils.dist.apply(void 0,_toConsumableArray(currentMousePosition).concat(_toConsumableArray(mouseDownPosition))),raycast());0<=clostestPoint&&select([clostestPoint]),0<=clostestPoint&&onClick(pointList[clostestPoint],clostestPoint,event)}},mouseMoveHandler=function(event){if(isInit){getRelativeMousePosition(event);var clostestPoint=raycast();hover(clostestPoint),mouseDown&&drawRaf()}},updateViewAspectRatio=function(){viewAspectRatio=width/height,projection=_glMatrix.mat4.fromScaling([],[1/viewAspectRatio,1,1]),model=_glMatrix.mat4.fromScaling([],[dataAspectRatio,1,1])},setHeight=function(newHeight){!+newHeight||0>=+newHeight||(height=+newHeight,canvas.height=height*window.devicePixelRatio)},setWidth=function(newWidth){!+newWidth||0>=+newWidth||(width=+newWidth,canvas.width=width*window.devicePixelRatio)},getPointSize=function(){return initialPointSize*window.devicePixelRatio},getProjection=function(){return projection},getView=function(){return camera.view},getModel=function(){return model},getScaling=function(){return state.scaling};window.onStyleChange=function(prop){console.log("onStyleChange",hi),hi=prop,drawRaf()},options.drawCurves=!1;options.drawCurves?(0,_arcLayer.default)(options.regl,attributes,getModel,getProjection,getView):(0,_edges.default)(options.regl,attributes,getModel,getProjection,getView);var getPointSizeExtra,getNumPoints,drawPoints=function(getPos,getPointSizeExtra,getNumPoints){var getColors=3<arguments.length&&void 0!==arguments[3]?arguments[3]:function(){return"cluster"==hi?attributes.color:attributes.sentimentValue};return regl({frag:POINT_FS,vert:POINT_VS,blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"one",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},depth:{enable:!1},attributes:{pos:{buffer:getPos,size:2},color:{buffer:getColors,size:3},stateIndex:{buffer:function buffer(){return attributes.stateIndex},size:1},dates:{buffer:function buffer(){return attributes.dates},size:1}},uniforms:{projection:getProjection,dateFilter:regl.prop("dateFilter"),selectedCluster:function selectedCluster(){return 1>getPos.length?state.selectedCluster:-100},model:getModel,view:getView,scaling:getScaling,pointSize:getPointSize,pointSizeExtra:getPointSizeExtra,sizeAttenuation:function sizeAttenuation(){return state.sizeAttenuation},flatSize:function flatSize(){return state.flatSize}},count:getNumPoints,primitive:"points"})},drawPointBodies=(getPointSizeExtra=function getNormalPointSizeExtra(){return 0},getNumPoints=function(){return 0|numPoints*state.numNodes},regl({frag:POINT_FS,vert:POINT_VS,blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"one",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},depth:{enable:!1},attributes:{pos:{buffer:function buffer(){return attributes.position},size:2},color:{buffer:function buffer(){return attributes.color},size:3},stateIndex:{buffer:function buffer(){return attributes.stateIndex},size:1},dates:{buffer:function buffer(){return attributes.dates},size:1}},uniforms:{projection:getProjection,time:function time(ctx){return console.log(ctx.time,ctx.tick),ctx.time},dateFilter:regl.prop("dateFilter"),selectedCluster:function selectedCluster(){return 1>attributes.position.length?state.selectedCluster:-100},model:getModel,view:getView,scaling:getScaling,pointSize:getPointSize,pointSizeExtra:getPointSizeExtra,sizeAttenuation:regl.prop("sizeAttenuation"),flatSize:regl.prop("flatSize")},count:getNumPoints,primitive:"points"})),drawBackgroundImage=regl({frag:"\nprecision mediump float;\n\nuniform sampler2D texture;\n\nvarying vec2 uv;\n\nvoid main () {\n  gl_FragColor = texture2D(texture, uv);\n}\n",vert:"\nprecision mediump float;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\n\nattribute vec2 position;\n\nvarying vec2 uv;\n\nvoid main () {\n  uv = position;\n  gl_Position = projection * view * model *  vec4(1.0 - 2.0 * position, 0, 1);\n}\n",attributes:{position:[0,1,0,0,1,0,0,1,1,1,1,0]},uniforms:{projection:getProjection,model:getModel,view:getView,texture:function getBackgroundImage(){return backgroundImage}},count:6});window.tooltip=function(x,y){var v=[x,y,0,1];_glMatrix.mat4.multiply(scratch,projection,_glMatrix.mat4.multiply(scratch,camera.view,model)),_glMatrix.vec4.transformMat4(v,v,scratch),console.log(v)};var setPoints=function(newPoints){isInit=!1,pointList=newPoints,numPoints=newPoints.length,searchIndex=new _kdbush.default(newPoints,(function(p){return p[0]}),(function(p){return p[1]}),16),isInit=!0},draw=function(){var idx,numOutlinedPoints,xy,c,colors;isInit&&(regl.clear({color:BG_COLOR,depth:1}),camera.tick(),backgroundImage&&drawBackgroundImage(),state.showNodes&&drawPointBodies(state),0<=hoveredPoint&&function(state){var idx=hoveredPoint,xy=searchIndex.points[idx].slice(0,2),c=[[1,1,1],[1,0,1],[1,1,0]],colors=function(i){return c[i]};drawPoints(xy,(function(){return(pointSizeSelected+4)*window.devicePixelRatio}),(function(){return 1}),colors(0))(state),drawPoints(xy,(function(){return pointSizeSelected}),(function(){return 1}),colors(1))(state)}(state),selection.length&&(idx=selection[0],numOutlinedPoints=selection.length,xy=searchIndex.points[idx],c=[[1,1,1],[1,0,1],[1,1,1]],drawPoints(xy,(function(){return(pointSizeSelected+4)*window.devicePixelRatio}),(function(){return numOutlinedPoints}),(colors=function(i){return c[i]})(0))(state),drawPoints(xy,(function(){return(pointSizeSelected+2)*window.devicePixelRatio}),(function(){return numOutlinedPoints}),colors(1))(state),drawPoints(xy,(function(){return pointSizeSelected}),(function(){return numOutlinedPoints}),colors(2))(state)),state.favorites.length&&function(){var numOutlinedPoints=state.favorites.length,xy=_lodash.default.flatten(state.favorites.map((function(idx){return("string"==typeof idx?pointList.find((function(d){return d[2]===idx})):pointList[idx]).slice(0,2)}))),c=[[1,1,1],[.3,.3,.3],[1,1,1]],colors=function(i){return state.favorites.map((function(){return c[i]}))};drawPoints(xy,(function(){return(pointSizeSelected+4+1)*window.devicePixelRatio}),(function(){return numOutlinedPoints}),colors(0))(state),drawPoints(xy,(function(){return(pointSizeSelected+2+1)*window.devicePixelRatio}),(function(){return numOutlinedPoints}),colors(1))(state),drawPoints(xy,(function(){return 10}),(function(){return numOutlinedPoints}),colors(2))(state)}(),function(state){if(0<=hoveredPoint){var _searchIndex$points$h2=_slicedToArray(searchIndex.points[hoveredPoint].slice(0,2),2),x=_searchIndex$points$h2[0],y=_searchIndex$points$h2[1],v=[x,y,0,1];_glMatrix.mat4.multiply(scratch,projection,_glMatrix.mat4.multiply(scratch,camera.view,model)),_glMatrix.vec4.transformMat4(v,v,scratch),recticleHLine.setPoints([-1,v[1],1,v[1]]),recticleVLine.setPoints([v[0],1,v[0],-1]),recticleHLine.draw(),recticleVLine.draw();var fromage=[[1,1,1],[1,0,1]];drawPoints((function(){return[x,y]}),(function(){return(pointSizeSelected+4)*window.devicePixelRatio}),(function(){return 1}),(function(){return fromage[0]}))(state),drawPoints((function(){return[x,y]}),(function(){return(pointSizeSelected+2)*window.devicePixelRatio}),(function(){return 1}),(function(){return fromage[1]}))(state)}}(state))},drawRaf=(0,_withRaf.default)(draw),withDraw=function(f){return function(){var out=f.apply(void 0,arguments);return drawRaf(),out}},refresh=function(){regl.poll(),camera.refresh()},hover=function(point){var needsRedraw=!1;0<=point&&(needsRedraw=!0,hoveredPoint=point,onHover(point)),needsRedraw&&drawRaf(null)},reset=function(){initialView?camera.set(_glMatrix.mat4.clone(initialView)):camera.lookAt(_toConsumableArray(initialTarget),initialDistance,initialRotation)},mouseEnterCanvasHandler=function(){},mouseLeaveCanvasHandler=function(){hover(),drawRaf()},wheelHandler=function(){drawRaf(),refresh()};return updateViewAspectRatio(),camera=(0,_dom2dCamera.default)(canvas),initialView?camera.set(_glMatrix.mat4.clone(initialView)):camera.lookAt(_toConsumableArray(initialTarget),initialDistance,initialRotation),recticleHLine=(0,_lines.default)(regl,{color:recticleColor,width:1,is2d:!0}),recticleVLine=(0,_lines.default)(regl,{color:recticleColor,width:1,is2d:!0}),function(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_ref$height=_ref.height,newHeight=void 0===_ref$height?null:_ref$height,_ref$width=_ref.width,newWidth=void 0===_ref$width?null:_ref$width;setHeight(newHeight),setWidth(newWidth),updateViewAspectRatio(),camera.refresh(),refresh(),drawRaf()}({width:width,height:height}),window.addEventListener("mousedown",mouseDownHandler,!1),window.addEventListener("mouseup",mouseUpHandler,!1),window.addEventListener("mousemove",mouseMoveHandler,!1),canvas.addEventListener("mouseenter",mouseEnterCanvasHandler,!1),canvas.addEventListener("mouseleave",mouseLeaveCanvasHandler,!1),canvas.addEventListener("click",mouseClickHandler,!1),canvas.addEventListener("wheel",wheelHandler),setPoints(attributes.pointList),{setProps:function setProps(props){_lodash.default.each(props.attributes,(function(k,v){attributes[v]=k})),props.attributes&&props.attributes.pointList&&setPoints(props.attributes.pointList),hoveredPoint=0,drawRaf()},deselect:function(){},destroy:function destroy(){canvas=void 0,camera=void 0,regl=void 0},draw:drawRaf,repaint:function repaint(){withDraw(reset)()},hoverPoint:function hoverPoint(uuid){console.log("uid",uuid,pointList.findIndex((function(d){return d[2]===uuid}))),hoveredPoint=pointList.findIndex((function(d){return d[2]===uuid})),draw()},refresh:refresh,reset:withDraw(reset),select:select,setState:function setState(options){drawRaf(),_lodash.default.each(options,(function(k,v){state[v]=k}))}}},_default={init:function(props){props.regl=(0,_utils.createRegl)(props.canvas);var graph=creategraph(props);return graph._data=props,graph}};exports.default=_default},806:function(module,exports,__webpack_require__){"use strict";__webpack_require__(20),__webpack_require__(353),__webpack_require__(22),__webpack_require__(64),__webpack_require__(198),__webpack_require__(21),__webpack_require__(199),__webpack_require__(200),__webpack_require__(201),__webpack_require__(202),__webpack_require__(203),__webpack_require__(204),__webpack_require__(205),__webpack_require__(206),__webpack_require__(207),__webpack_require__(208),__webpack_require__(209),__webpack_require__(210),__webpack_require__(211),__webpack_require__(212),__webpack_require__(213),__webpack_require__(214),__webpack_require__(215),__webpack_require__(216),__webpack_require__(217),__webpack_require__(218),__webpack_require__(219),__webpack_require__(220),__webpack_require__(221),__webpack_require__(222),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var FRAG_SHADER="\nprecision mediump float;\nuniform vec4 color;\nvoid main() {\n  gl_FragColor = color;\n}",VERT_SHADER="\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform float aspectRatio;\n\nuniform float width;\nuniform int miter;\n\nattribute vec3 prevPosition;\nattribute vec3 currPosition;\nattribute vec3 nextPosition;\nattribute float offsetScale;\n\nvoid main() {\n  vec2 aspectVec = vec2(aspectRatio, 1.0);\n  mat4 projViewModel = projection * view * model;\n  vec4 prevProjected = projViewModel * vec4(prevPosition, 1.0);\n  vec4 currProjected = projViewModel * vec4(currPosition, 1.0);\n  vec4 nextProjected = projViewModel * vec4(nextPosition, 1.0);\n\n  // get 2D screen space with W divide and aspect correction\n  vec2 prevScreen = prevProjected.xy / prevProjected.w * aspectVec;\n  vec2 currScreen = currProjected.xy / currProjected.w * aspectVec;\n  vec2 nextScreen = nextProjected.xy / nextProjected.w * aspectVec;\n\n  // starting point uses (next - current)\n  vec2 dir = vec2(0.0);\n  if (currScreen == prevScreen) {\n    dir = normalize(nextScreen - currScreen);\n  }\n  // ending point uses (current - previous)\n  else if (currScreen == nextScreen) {\n    dir = normalize(currScreen - prevScreen);\n  }\n  // somewhere in middle, needs a join\n  else {\n    // get directions from (C - B) and (B - A)\n    vec2 dirA = normalize((currScreen - prevScreen));\n    if (miter == 1) {\n      vec2 dirB = normalize((nextScreen - currScreen));\n      // now compute the miter join normal and length\n      vec2 tangent = normalize(dirA + dirB);\n      vec2 perp = vec2(-dirA.y, dirA.x);\n      vec2 miter = vec2(-tangent.y, tangent.x);\n      dir = tangent;\n    } else {\n      dir = dirA;\n    }\n  }\n\n  vec2 normal = vec2(-dir.y, dir.x) * width;\n  normal.x /= aspectRatio;\n  vec4 offset = vec4(normal * offsetScale, 0.0, 0.0);\n  gl_Position = currProjected + offset;\n}",_Array$prototype=Array.prototype,push=_Array$prototype.push,unshift=_Array$prototype.unshift,I=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),FLOAT_BYTES=Float32Array.BYTES_PER_ELEMENT,createMesh=function(numPoints,width){for(var buffer=2<arguments.length&&void 0!==arguments[2]?arguments[2]:[],i=0;i<numPoints-1;i++){var a=width+2*i,b=a+1,c=a+2;buffer.push(a,b,c,c,b,a+3)}return buffer},buffer_duplicate=function duplicate(buffer){for(var index,stride=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,dupScale=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,out=[],component=Array(2*stride),i=0,il=buffer.length/stride;i<il;i++){index=i*stride;for(var value,j=0;j<stride;j++)value=buffer[index+j],component[j]=value,component[j+stride]=value*dupScale;push.apply(out,component)}return out},buffer_pushElement=function pushElement(buffer,elementIndex,stride){for(var component=Array(stride),i=0;i<stride;i++)component[i]=buffer[elementIndex*stride+i];return push.apply(buffer,component),buffer},buffer_unshiftElement=function unshiftElement(buffer,elementIndex,stride){for(var component=Array(stride),i=0;i<stride;i++)component[i]=buffer[elementIndex*stride+i];return unshift.apply(buffer,component),buffer},buffer_increaseStride=function increaseStride(buffer,stride,newStride){for(var index,undefValue=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0,out=[],component=Array(newStride).fill(undefValue),i=0,il=buffer.length/stride;i<il;i++){index=i*stride;for(var j=0;j<stride;j++)component[j]=buffer[index+j];push.apply(out,component)}return out},_default=function(regl){var _ref=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref$projection=_ref.projection,projection=void 0===_ref$projection?I:_ref$projection,_ref$model=_ref.model,model=void 0===_ref$model?I:_ref$model,_ref$view=_ref.view,view=void 0===_ref$view?I:_ref$view,_ref$points=_ref.points,points=void 0===_ref$points?[]:_ref$points,_ref$widths=_ref.widths,widths=void 0===_ref$widths?[]:_ref$widths,_ref$color=_ref.color,_color=void 0===_ref$color?[.8,.5,0,1]:_ref$color,_ref$width=_ref.width,_width=void 0===_ref$width?1:_ref$width,_ref$miter=_ref.miter,miter=void 0===_ref$miter?1:_ref$miter,_ref$is2d=_ref.is2d,is2d=void 0!==_ref$is2d&&_ref$is2d,_ref$zPos2d=_ref.zPos2d,zPos2d=void 0===_ref$zPos2d?0:_ref$zPos2d;if(regl){var numPoints,numPointsTotal,pointsPadded,pointsDup,widthsDup,indices,pointBuffer,widthBuffer,attributes,_elements,drawLine,dim=is2d?2:3,init=function(){pointBuffer=regl.buffer(),widthBuffer=regl.buffer(),attributes={prevPosition:{buffer:function(){return pointBuffer},offset:0,stride:3*FLOAT_BYTES},currPosition:{buffer:function(){return pointBuffer},offset:3*FLOAT_BYTES*2,stride:3*FLOAT_BYTES},nextPosition:{buffer:function(){return pointBuffer},offset:3*FLOAT_BYTES*4,stride:3*FLOAT_BYTES},offsetScale:function offsetScale(){return widthBuffer}},_elements=regl.elements(),drawLine=regl({attributes:attributes,depth:{enable:!is2d},blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"one",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},uniforms:{projection:function(context,props){return context.projection||props.projection},model:function(context,props){return context.model||props.model},view:function(context,props){return context.view||props.view},aspectRatio:function aspectRatio(_ref2){return _ref2.viewportWidth/_ref2.viewportHeight},color:function color(){return _color},width:function width(_ref3){var viewportWidth=_ref3.viewportWidth;return _width/viewportWidth*window.devicePixelRatio},miter:miter},elements:function elements(){return _elements},vert:VERT_SHADER,frag:FRAG_SHADER})},prepare=function(){0<points.length%dim&&console.warn("The length of points (".concat(numPoints,") does not match the dimensions (").concat(dim,"). Incomplete points are ignored.")),pointsPadded=points.slice(0,numPoints*dim),is2d&&(pointsPadded=buffer_increaseStride(pointsPadded,2,3,zPos2d)),widths.length!==numPoints&&(widths=Array(numPoints).fill(1)),buffer_pushElement(pointsPadded,numPoints-1,3),buffer_unshiftElement(pointsPadded,0,3),pointsDup=new Float32Array(buffer_duplicate(pointsPadded,3)),widthsDup=buffer_duplicate(widths,1,-1),indices=createMesh(numPoints,0),pointBuffer({usage:"dynamic",type:"float",length:3*numPointsTotal*2*FLOAT_BYTES,data:pointsDup}),widthBuffer({usage:"dynamic",type:"float",length:1*numPoints*2*FLOAT_BYTES,data:widthsDup}),_elements({primitive:"triangles",usage:"dynamic",type:"uint16",data:indices})},clear=function(){destroy(),init()},destroy=function(){points=null,pointsPadded=null,pointsDup=null,widthsDup=null,indices=null,pointBuffer.destroy(),widthBuffer.destroy(),_elements.destroy()},draw=function(){var _ref4=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},newProjection=_ref4.projection,newModel=_ref4.model,newView=_ref4.view;newProjection&&(projection=newProjection),newModel&&(model=newModel),newView&&(view=newView),points&&1<points.length&&drawLine({projection:projection,model:model,view:view})},getPoints=function(){return points},setPoints=function(){var newPoints=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],newWidths=1<arguments.length&&void 0!==arguments[1]?arguments[1]:widths,newIs2d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:is2d;points=newPoints,dim=(is2d=newIs2d)?2:3,numPoints=Math.floor(points.length/dim),numPointsTotal=numPoints+2,newWidths.length===numPoints&&(widths=newWidths),points&&1<points.length?prepare():clear()},getStyle=function(){return{color:_color,miter:miter,width:_width}},getBuffer=function(){return{points:pointBuffer,widths:widthBuffer}},getData=function(){return{points:pointsDup,widths:widthsDup}};return init(),points&&1<points.length&&setPoints(points),{clear:clear,destroy:destroy,draw:draw,getPoints:getPoints,setPoints:setPoints,getData:getData,getBuffer:getBuffer,getStyle:getStyle,setStyle:function setStyle(){var _ref5=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},newColor=_ref5.color,newMiter=_ref5.miter,newWidth=_ref5.width;newColor&&(_color=newColor),newMiter&&(miter=newMiter),0<+newWidth&&(_width=newWidth)}}}console.error("Regl instance is undefined.")};exports.default=_default},807:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=function createDrawLines(regl,attributes,getModel,getProjection,getView){if(window.attr=attributes,!attributes.edges)return function(){};var lineWidth=10;return lineWidth>regl.limits.lineWidthDims[1]&&(lineWidth=regl.limits.lineWidthDims[1]),console.log(attributes),regl({frag:"\n      precision mediump float;\n      varying vec3 v_color;\n      varying vec3 wow;\n      uniform float opacity;\n      uniform bool edgeColors;\n\n\n      void main() {\n        if ( edgeColors)\n      gl_FragColor = vec4(v_color, .5);\n      else\n      gl_FragColor = vec4(1,1,1, 1);\n      }",vert:"\n      varying vec3 v_color;\n\n      precision mediump float;\n      attribute vec2 sourcePositions, targetPositions;\n      attribute vec3 color;\n\n      uniform mat4 projection, view;\n      uniform mat4 model;\n\n      uniform float scale;\n      uniform vec2 offset;\n      uniform float tick;\n      uniform float phase;\n\n      uniform float freq;\n      attribute float dates;\n\n      varying vec3 wow;\n      uniform vec2 selection;\n\n      void main() {\n        vec2 p  = sourcePositions;\n\n        // if (selection.x < dates && dates < selection.y )\n        // wow = vec3(0);\n        // else wow = vec3(1);\n        v_color = color;\n\n        // translate\n        p += offset;\n        gl_Position = projection * view * model * vec4(p, 0, 1);\n      }",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},attributes:{sourcePositions:function sourcePositions(){return attributes.edges.sourcePositions},targetPositions:function targetPositions(){return attributes.edges.targetPositions},color:{buffer:function buffer(){return attributes.edgeColors},offset:0}},uniforms:{edgeColors:regl.prop("edgeColors"),scale:1,offset:[0,0],phase:0,freq:.01,opacity:.5,selection:function selection(){return window.getAdnan?window.getAdnan():[1,1]},view:getView,projection:getProjection,model:getModel},lineWidth:lineWidth,count:function count(){return attributes.position.length/1},primitive:"lines",offset:1})};exports.default=_default},808:function(module,exports,__webpack_require__){"use strict";__webpack_require__(56),__webpack_require__(809),__webpack_require__(37),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default=function createArcs(regl,attributes,getModel,getProjection,getView){if(!attributes.edges)return function(){};window.positions=[-.5,.5,0,-.5,-.5,0,.5,-.5,0,.5,.5,0];var N=attributes.edges.sourcePositions.length,x=[{x:-1,y:1,z:0},{x:-.75,y:1,z:0},{x:-.5,y:1,z:0},{x:-.25,y:1,z:0},{x:0,y:1,z:0},{x:.25,y:1,z:0},{x:.5,y:1,z:0},{x:.75,y:1,z:0},{x:1,y:1,z:0},{x:-1,y:-1,z:0},{x:-.75,y:-1,z:0},{x:-.5,y:-1,z:0},{x:-.25,y:-1,z:0},{x:0,y:-1,z:0},{x:.25,y:-1,z:0},{x:.5,y:-1,z:0},{x:.75,y:-1,z:0},{x:1,y:-1,z:0}].map((function(d){return[d.x,d.y]}));window.N=N;var draw=regl({frag:"\n      #extension GL_OES_standard_derivatives : enable\n\n      precision mediump float;\n      varying vec3 v_color;\n      varying vec2 vCoord;\n\n      uniform float opacity;\n      uniform float time;\n      uniform bool edgeColors;\n      float aastep (float threshold, float value) {\n        float afwidth = fwidth(value) * 0.5;\n        return smoothstep(threshold - afwidth, threshold + afwidth, value);\n      }\n\n      void main() {\n        float repeat = 100.0;\n\n// How big is the gap between each dash\nfloat gapSize = 0.25;\n\n// Create a dashed line\nfloat dash = abs(fract(vCoord.x * repeat) - 0.5);\n\n// Smooth the dashed line to sharp/crisp anti-aliasing\ndash = 1.0 - aastep(gapSize, dash);\n\ngl_FragColor = vec4(vec3(dash).rg, sin(time), 1.0);\n      }",vert:"\n      varying vec3 v_color;\n      varying vec2 vCoord;\n\n      precision mediump float;\n      attribute vec2 position;\n      attribute vec3 color;\n\n      uniform mat4 projection, view;\n      uniform mat4 model;\n\n      uniform float numSegments;\n      uniform float opacity;\n\nattribute vec2 sourcePositions;\nattribute vec2 targetPositions;\n\nuniform vec2 project_uViewportSize;\n\n      float paraboloid(vec3 source, vec3 target, float ratio) {\n  // d: distance on the xy plane\n  // r: ratio of the current point\n  // p: ratio of the peak of the arc\n  // h: height multiplier\n  // z = f(r) = sqrt(r * (p * 2 - r)) * d * h\n  // f(0) = 0\n  // f(1) = dz\n  vec3 delta = target - source;\n  float dh = length(delta.xy) * 1.;\n  float unitZ = delta.z / dh;\n  float p2 = unitZ * unitZ + 1.0;\n  // sqrt does not deal with negative values, manually flip source and target if delta.z < 0\n  float dir = step(delta.z, 0.0);\n  float z0 = mix(source.z, target.z, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\n\n\n      vec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n        // normalized direction of the line\n        vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n        // rotate by 90 degrees\n        dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n        return dir_screenspace * offset_direction * width / 2.0;\n      }\n\n      float getSegmentRatio(float index) {\n        return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n      }\n      vec3 getPos(vec3 source, vec3 target, float segmentRatio) {\n        float z = paraboloid(source, target, segmentRatio);\n        float tiltAngle = radians(1.);\n        vec2 tiltDirection = normalize(target.xy - source.xy);\n        vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n        return vec3(\n          mix(source.xy, target.xy, segmentRatio) + tilt,\n          z * cos(tiltAngle)\n        );\n      }\n      #define PI 3.14\n      uniform vec2 start;\n      uniform vec2 end;\n      uniform vec2 control;\n\n      vec3 sample (float t) {\n        // We can also adjust the per-vertex curve thickness by modifying this 0..1 number\n        //float volume = 1.0;\n\n        // Try replacing the above with:\n         float volume = 1.0 * sin(t * PI);\n\n        // Solve the quadratic curve with the start, control and end points:\n        float dt = (1.0 - t);\n        float dtSq = dt * dt;\n        float tSq = t * t;\n        float x = dtSq * start.x + 2.0 * dt * t * control.x + tSq * end.x;\n        float y = dtSq * start.y + 2.0 * dt * t * control.y + tSq * end.y;\n        return vec3(x, y, volume);\n\n        // Alternatively, you can replace the above with a linear mix() operation\n        // This will produce a straight line between the start and end points\n        // return vec3(mix(start, end, t), volume);\n      }\n\n\n\n\n      void main() {\n        vec2 p  = position;\n        float subdivisions = 50.;\n        float thickness = .1;\n\n        v_color = color;\n        v_color.x = position.x;\n        //vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n\n        vec4 source = projection * view * model * vec4(sourcePositions, 0, 1);\n        vec4 target = projection * view * model * vec4(targetPositions, 0, 1);\n        gl_Position = projection * view * model * vec4(position, 0, 1);\n\n\n\n        float arclen = (position.x * 0.5 + 0.5);\n\n          // How far to offset the line thickness for this vertex in -1..1 space\n          float extrusion = position.y;\n\n          // Find next sample along curve\n          float nextArclen = arclen + (1.0 / subdivisions);\n\n          // Sample the curve in two places\n          // XY is the 2D position, and the Z component is the thickness at that vertex\n          vec3 current = sample(arclen);\n          vec3 next = sample(nextArclen);\n\n          // Now find the 2D perpendicular to form our line segment\n          vec2 direction = normalize(next.xy - current.xy);\n          vec2 perpendicular = vec2(-direction.y, direction.x);\n\n          // Extrude\n          float computedExtrusion = extrusion * (thickness / 2.0) * current.z;\n          vec3 offset = current.xyz + vec3(perpendicular.xy, 0.0) * computedExtrusion;\n\n          gl_Position = projection * view * model * vec4(offset.xyz, 1.0);\n            vCoord = position.xy;\n          //gl_Position = projectionMatrix * modelViewMatrix * vec4(offset.xyz, 1.0);\n\n      }",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},attributes:{sourcePositions:{buffer:attributes.edges.sourcePositions},targetPositions:{buffer:attributes.edges.targetPositions},position:{buffer:x},color:{buffer:function buffer(){return attributes.edgeColors},offset:0}},uniforms:{time:function time(_ref){return _ref.time},thickness:function thickness(){return.1*(.5*Math.sin(Date.now())+.5)+.01},end:[.5,.5],start:[.25,.25],control:function control(){var temp=0>=arguments.length?void 0:arguments[0],time=temp.tick,angle=.5*time+2*Math.PI,radius=2*(.5*Math.sin(time)+.5);return console.log([Math.cos(angle)*radius,Math.sin(angle)*radius]),[Math.cos(angle)*radius,Math.sin(angle)*radius]},edgeColors:regl.prop("edgeColors"),opacity:.5,view:getView,projection:getProjection,model:getModel},count:function count(){return 4},instances:N,primitive:"triangle strip"});return window.attributes=attributes,function(){draw()}};exports.default=_default},810:function(module,exports,__webpack_require__){"use strict";__webpack_require__(26),__webpack_require__(121),__webpack_require__(28),__webpack_require__(191),__webpack_require__(82),__webpack_require__(811),__webpack_require__(812),__webpack_require__(61),__webpack_require__(29),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;(function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj})(__webpack_require__(359));function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function(){return cache},cache}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var _default=function(regl,options){var attributes=options.attributes,canvas=options.canvas,fbo=(options.data.nodes,regl.framebuffer({width:canvas.width,height:canvas.height,colorFormat:"rgba"})),drawBunny=(regl({vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main () {\n\n      // **   in the following formula there are some transformation factor because   **\n      // **   the screen coordinates go                                               **\n      // **   from [-1, -1, -1] to [1, 1, 1],                                         **\n      // **   but texture coordinates go                                              **\n      // **   from [0, 0] to [1, 1]                                                   **\n\n      uv = (position + 1.0) / 2.0;\n      gl_Position = vec4(1.0 * position, 0, 1);\n    }",frag:"\n    precision mediump float;\n    uniform sampler2D texture;\n\n    varying vec2 uv;\n    void main () {\n      vec3 rgb = texture2D(texture, uv).rgb;\n      gl_FragColor = vec4(rgb, 0.5);\n    }",attributes:{position:[-1,1,-1,-1,1,-1,-1,1,1,1,1,-1]},uniforms:{texture:fbo},count:6,blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:1,dstRGB:"one minus src alpha",dstAlpha:1}}}),function createBunny(regl){var common={vert:"\n\n      precision mediump float;\n      attribute vec2 position;\n\n      uniform mat4 projection, view;\n\n      uniform vec2 offset;\n\n      varying vec3 vColor;\n      attribute vec3 color;\n      attribute vec3 fboColor;\n      uniform bool isFbo;\n\n\n      void main() {\n        vec2 p  = position;\n        vColor = isFbo ? fboColor : color;\n        gl_PointSize = 10.0;\n        gl_Position = projection * view * vec4(p, -.001, 1);\n      }",attributes:attributes,primitive:"points",count:attributes.position.length/4};return{draw:regl(_objectSpread({},common,{frag:"\n      #extension GL_OES_standard_derivatives : enable\n      precision mediump float;\n      varying vec3 vColor;\n      uniform float opacity;\n\n      void main() {\n\n        float r = 0.0;\n        float delta = 0.0;\n        float alpha = 1.0;\n        vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n\n        // We can make circles by taking the dot product of a coordinate,\n        // and discard any pixels that have a dot product greater than 1\n        r = dot(cxy, cxy);\n\n        delta = fwidth(r);\n\n        alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n\n        if (r > 1.0) {\n          discard;\n        }\n\n        gl_FragColor = vec4(vColor * alpha, alpha);\n\n      }",uniforms:{isFbo:!1,view:function view(){return window.getView()},projection:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},cull:{enable:!0},depth:{enable:!0,mask:!0},blend:{enable:!1,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}}})),drawFbo:regl(_objectSpread({},common,{framebuffer:fbo,uniforms:{isFbo:!0},frag:"\n        precision mediump float;\n        varying vec3 vColor;\n        void main() {\n          gl_FragColor = vec4(vColor, 1);\n        }\n      "}))}}(regl));return document.onmousemove=function(e){e.clientX,e.clientY},window.onresize=function(){fbo.resize(canvas.width,canvas.height)},function(){drawBunny.draw()}};exports.default=_default},813:function(module,exports,__webpack_require__){"use strict";__webpack_require__(26),__webpack_require__(35),__webpack_require__(36),__webpack_require__(20),__webpack_require__(180),__webpack_require__(28),__webpack_require__(55),__webpack_require__(46),__webpack_require__(22),__webpack_require__(56),__webpack_require__(168),__webpack_require__(64),__webpack_require__(37),__webpack_require__(63),__webpack_require__(348),__webpack_require__(351),__webpack_require__(21),__webpack_require__(814),__webpack_require__(97),__webpack_require__(62),__webpack_require__(47),__webpack_require__(38),__webpack_require__(119),__webpack_require__(328),__webpack_require__(29),__webpack_require__(39),Object.defineProperty(exports,"__esModule",{value:!0}),exports.toRgba=exports.normNumArray=exports.min=exports.max=exports.isRgba=exports.isRgb=exports.isUint8Array=exports.isUint8=exports.isString=exports.isPointInPolygon=exports.isNormFloatArray=exports.isNormFloat=exports.isHex=exports.hexToRgba=exports.createTextureFromUrl=exports.loadImage=exports.hexToRgb=exports.getBBox=exports.dist=exports.createRegl=exports.checkReglExtensions=exports.arrayMax=void 0;var _regl=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(816)),_constants=__webpack_require__(358);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var arrayMax=function(max,x){return max>x?max:x};exports.arrayMax=arrayMax;exports.checkReglExtensions=function(regl){return!!regl&&_constants.GL_EXTENSIONS.reduce((function(every,EXTENSION){return regl.hasExtension(EXTENSION)?every:(console.warn("WebGL: ".concat(EXTENSION," extension not supported. Scatterplot might not render properly")),!1)}),!0)};exports.createRegl=function(canvas){var gl=canvas.getContext("webgl"),extensions=[];return _constants.GL_EXTENSIONS.forEach((function(EXTENSION){console.log(EXTENSION),gl.getExtension(EXTENSION)?extensions.push(EXTENSION):console.warn("WebGL: ".concat(EXTENSION," extension not supported. Scatterplot might not render properly"))})),(0,_regl.default)({gl:gl,extensions:extensions})};exports.dist=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2))};exports.getBBox=function(positions2d){for(var xMin=1/0,xMax=-1/0,yMin=1/0,yMax=-1/0,i=0;i<positions2d.length;i+=2)xMin=positions2d[i]<xMin?positions2d[i]:xMin,xMax=positions2d[i]>xMax?positions2d[i]:xMax,yMin=positions2d[i+1]<yMin?positions2d[i+1]:yMin,yMax=positions2d[i+1]>yMax?positions2d[i+1]:yMax;return[xMin,yMin,xMax,yMax]};var hexToRgb=function(hex){var isNormalize=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(m,r,g,b){return"#".concat(r).concat(r).concat(g).concat(g).concat(b).concat(b)})).substring(1).match(/.{2}/g).map((function(x){return parseInt(x,16)/Math.pow(255,isNormalize)}))};exports.hexToRgb=hexToRgb;var loadImage=function(src){var isCrossOrigin=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return new Promise((function(accept,reject){var image=new Image;isCrossOrigin&&(image.crossOrigin="anonymous"),image.src=src,image.onload=function(){accept(image)},image.onerror=function(error){reject(error)}}))};exports.loadImage=loadImage;exports.createTextureFromUrl=function(regl,url){var isCrossOrigin=2<arguments.length&&void 0!==arguments[2]&&arguments[2];return new Promise((function(resolve,reject){loadImage(url,isCrossOrigin).then((function(image){resolve(regl.texture(image))})).catch((function(error){reject(error)}))}))};var hexToRgba=function(hex){var isNormalize=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return[].concat(_toConsumableArray(hexToRgb(hex,isNormalize)),[Math.pow(255,!isNormalize)])};exports.hexToRgba=hexToRgba;var isHex=function(hex){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex)};exports.isHex=isHex;var isNormFloat=function(x){return 0<=x&&1>=x};exports.isNormFloat=isNormFloat;var isNormFloatArray=function(a){return Array.isArray(a)&&a.every(isNormFloat)};exports.isNormFloatArray=isNormFloatArray;exports.isPointInPolygon=function(){for(var x1,y1,x2,y2,_ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],_ref2=_slicedToArray(_ref,2),px=_ref2[0],py=_ref2[1],polygon=1<arguments.length?arguments[1]:void 0,isWithin=!1,i=0,j=polygon.length-2;i<polygon.length;i+=2)x1=polygon[i],y1=polygon[i+1],x2=polygon[j],y1>py!=(y2=polygon[j+1])>py&&px<(x2-x1)*(py-y1)/(y2-y1)+x1&&(isWithin=!isWithin),j=i;return isWithin};exports.isString=function(s){return"string"==typeof s||s instanceof String};var isUint8=function(x){return Number.isInteger(x)&&0<=x&&255>=x};exports.isUint8=isUint8;var isUint8Array=function(a){return Array.isArray(a)&&a.every(isUint8)};exports.isUint8Array=isUint8Array;var isRgb=function(rgb){return 3===rgb.length&&(isNormFloatArray(rgb)||isUint8Array(rgb))};exports.isRgb=isRgb;var isRgba=function(rgba){return 4===rgba.length&&(isNormFloatArray(rgba)||isUint8Array(rgba))};exports.isRgba=isRgba;exports.max=function(a,b){return a>b?a:b};exports.min=function(a,b){return a<b?a:b};var normNumArray=function(a){return a.map((function(x){return x/a.reduce(arrayMax,-1/0)}))};exports.normNumArray=normNumArray;exports.toRgba=function(color,isNormalize){return isRgba(color)?isNormalize&&!isNormFloatArray(color)?normNumArray(color):color:isRgb(color)?[].concat(_toConsumableArray(isNormalize?normNumArray(color):color),[Math.pow(255,!isNormalize)]):isHex(color)?hexToRgba(color,isNormalize):(console.warn("Only HEX, RGB, and RGBA are handled by this function. Returning white instead."),isNormalize?[1,1,1,1]:[255,255,255,255])}}},[[376,1,2]]]);
//# sourceMappingURL=main.da6786c10de4efb925ca.bundle.js.map